// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ExampleService.proto

#ifndef PROTOBUF_ExampleService_2eproto__INCLUDED
#define PROTOBUF_ExampleService_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
#include "ExampleCharacter.pb.h"
// @@protoc_insertion_point(includes)

namespace example_proto {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_ExampleService_2eproto();
void protobuf_AssignDesc_ExampleService_2eproto();
void protobuf_ShutdownFile_ExampleService_2eproto();

class AuthRequest;
class AuthResponse;
class FailedAuthResponse;
class SuccessfullAuthResponse;

// ===================================================================

class AuthRequest : public ::google::protobuf::Message {
 public:
  AuthRequest();
  virtual ~AuthRequest();

  AuthRequest(const AuthRequest& from);

  inline AuthRequest& operator=(const AuthRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthRequest& default_instance();

  void Swap(AuthRequest* other);

  // implements Message ----------------------------------------------

  inline AuthRequest* New() const { return New(NULL); }

  AuthRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthRequest& from);
  void MergeFrom(const AuthRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Username = 1;
  void clear_username();
  static const int kUsernameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional string Hash = 2;
  void clear_hash();
  static const int kHashFieldNumber = 2;
  const ::std::string& hash() const;
  void set_hash(const ::std::string& value);
  void set_hash(const char* value);
  void set_hash(const char* value, size_t size);
  ::std::string* mutable_hash();
  ::std::string* release_hash();
  void set_allocated_hash(::std::string* hash);

  // @@protoc_insertion_point(class_scope:example_proto.AuthRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr hash_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ExampleService_2eproto();
  friend void protobuf_AssignDesc_ExampleService_2eproto();
  friend void protobuf_ShutdownFile_ExampleService_2eproto();

  void InitAsDefaultInstance();
  static AuthRequest* default_instance_;
};
// -------------------------------------------------------------------

class SuccessfullAuthResponse : public ::google::protobuf::Message {
 public:
  SuccessfullAuthResponse();
  virtual ~SuccessfullAuthResponse();

  SuccessfullAuthResponse(const SuccessfullAuthResponse& from);

  inline SuccessfullAuthResponse& operator=(const SuccessfullAuthResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SuccessfullAuthResponse& default_instance();

  void Swap(SuccessfullAuthResponse* other);

  // implements Message ----------------------------------------------

  inline SuccessfullAuthResponse* New() const { return New(NULL); }

  SuccessfullAuthResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SuccessfullAuthResponse& from);
  void MergeFrom(const SuccessfullAuthResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SuccessfullAuthResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string AuthToken = 1;
  void clear_authtoken();
  static const int kAuthTokenFieldNumber = 1;
  const ::std::string& authtoken() const;
  void set_authtoken(const ::std::string& value);
  void set_authtoken(const char* value);
  void set_authtoken(const char* value, size_t size);
  ::std::string* mutable_authtoken();
  ::std::string* release_authtoken();
  void set_allocated_authtoken(::std::string* authtoken);

  // optional .example_proto.ExampleCharacter CharacterInfo = 2;
  bool has_characterinfo() const;
  void clear_characterinfo();
  static const int kCharacterInfoFieldNumber = 2;
  const ::example_proto::ExampleCharacter& characterinfo() const;
  ::example_proto::ExampleCharacter* mutable_characterinfo();
  ::example_proto::ExampleCharacter* release_characterinfo();
  void set_allocated_characterinfo(::example_proto::ExampleCharacter* characterinfo);

  // @@protoc_insertion_point(class_scope:example_proto.SuccessfullAuthResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr authtoken_;
  ::example_proto::ExampleCharacter* characterinfo_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ExampleService_2eproto();
  friend void protobuf_AssignDesc_ExampleService_2eproto();
  friend void protobuf_ShutdownFile_ExampleService_2eproto();

  void InitAsDefaultInstance();
  static SuccessfullAuthResponse* default_instance_;
};
// -------------------------------------------------------------------

class FailedAuthResponse : public ::google::protobuf::Message {
 public:
  FailedAuthResponse();
  virtual ~FailedAuthResponse();

  FailedAuthResponse(const FailedAuthResponse& from);

  inline FailedAuthResponse& operator=(const FailedAuthResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FailedAuthResponse& default_instance();

  void Swap(FailedAuthResponse* other);

  // implements Message ----------------------------------------------

  inline FailedAuthResponse* New() const { return New(NULL); }

  FailedAuthResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FailedAuthResponse& from);
  void MergeFrom(const FailedAuthResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FailedAuthResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ErrorMessage = 1;
  void clear_errormessage();
  static const int kErrorMessageFieldNumber = 1;
  const ::std::string& errormessage() const;
  void set_errormessage(const ::std::string& value);
  void set_errormessage(const char* value);
  void set_errormessage(const char* value, size_t size);
  ::std::string* mutable_errormessage();
  ::std::string* release_errormessage();
  void set_allocated_errormessage(::std::string* errormessage);

  // @@protoc_insertion_point(class_scope:example_proto.FailedAuthResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr errormessage_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ExampleService_2eproto();
  friend void protobuf_AssignDesc_ExampleService_2eproto();
  friend void protobuf_ShutdownFile_ExampleService_2eproto();

  void InitAsDefaultInstance();
  static FailedAuthResponse* default_instance_;
};
// -------------------------------------------------------------------

class AuthResponse : public ::google::protobuf::Message {
 public:
  AuthResponse();
  virtual ~AuthResponse();

  AuthResponse(const AuthResponse& from);

  inline AuthResponse& operator=(const AuthResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthResponse& default_instance();

  enum AuthResponseOneofCase {
    kSuccessfullAuthData = 1,
    kFailedAuthData = 2,
    AUTHRESPONSE_ONEOF_NOT_SET = 0,
  };

  void Swap(AuthResponse* other);

  // implements Message ----------------------------------------------

  inline AuthResponse* New() const { return New(NULL); }

  AuthResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthResponse& from);
  void MergeFrom(const AuthResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .example_proto.SuccessfullAuthResponse SuccessfullAuthData = 1;
  bool has_successfullauthdata() const;
  void clear_successfullauthdata();
  static const int kSuccessfullAuthDataFieldNumber = 1;
  const ::example_proto::SuccessfullAuthResponse& successfullauthdata() const;
  ::example_proto::SuccessfullAuthResponse* mutable_successfullauthdata();
  ::example_proto::SuccessfullAuthResponse* release_successfullauthdata();
  void set_allocated_successfullauthdata(::example_proto::SuccessfullAuthResponse* successfullauthdata);

  // optional .example_proto.FailedAuthResponse FailedAuthData = 2;
  bool has_failedauthdata() const;
  void clear_failedauthdata();
  static const int kFailedAuthDataFieldNumber = 2;
  const ::example_proto::FailedAuthResponse& failedauthdata() const;
  ::example_proto::FailedAuthResponse* mutable_failedauthdata();
  ::example_proto::FailedAuthResponse* release_failedauthdata();
  void set_allocated_failedauthdata(::example_proto::FailedAuthResponse* failedauthdata);

  AuthResponseOneofCase AuthResponse_Oneof_case() const;
  // @@protoc_insertion_point(class_scope:example_proto.AuthResponse)
 private:
  inline void set_has_successfullauthdata();
  inline void set_has_failedauthdata();

  inline bool has_AuthResponse_Oneof() const;
  void clear_AuthResponse_Oneof();
  inline void clear_has_AuthResponse_Oneof();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  union AuthResponseOneofUnion {
    AuthResponseOneofUnion() {}
    ::example_proto::SuccessfullAuthResponse* successfullauthdata_;
    ::example_proto::FailedAuthResponse* failedauthdata_;
  } AuthResponse_Oneof_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_AddDesc_ExampleService_2eproto();
  friend void protobuf_AssignDesc_ExampleService_2eproto();
  friend void protobuf_ShutdownFile_ExampleService_2eproto();

  void InitAsDefaultInstance();
  static AuthResponse* default_instance_;
};
// ===================================================================

class AuthService_Stub;

class AuthService : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline AuthService() {};
 public:
  virtual ~AuthService();

  typedef AuthService_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void Authenticate(::google::protobuf::RpcController* controller,
                       const ::example_proto::AuthRequest* request,
                       ::example_proto::AuthResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(AuthService);
};

class AuthService_Stub : public AuthService {
 public:
  AuthService_Stub(::google::protobuf::RpcChannel* channel);
  AuthService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~AuthService_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements AuthService ------------------------------------------

  void Authenticate(::google::protobuf::RpcController* controller,
                       const ::example_proto::AuthRequest* request,
                       ::example_proto::AuthResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(AuthService_Stub);
};


// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// AuthRequest

// optional string Username = 1;
inline void AuthRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthRequest::username() const {
  // @@protoc_insertion_point(field_get:example_proto.AuthRequest.Username)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthRequest::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:example_proto.AuthRequest.Username)
}
inline void AuthRequest::set_username(const char* value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:example_proto.AuthRequest.Username)
}
inline void AuthRequest::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:example_proto.AuthRequest.Username)
}
inline ::std::string* AuthRequest::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:example_proto.AuthRequest.Username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthRequest::release_username() {
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:example_proto.AuthRequest.Username)
}

// optional string Hash = 2;
inline void AuthRequest::clear_hash() {
  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthRequest::hash() const {
  // @@protoc_insertion_point(field_get:example_proto.AuthRequest.Hash)
  return hash_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthRequest::set_hash(const ::std::string& value) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:example_proto.AuthRequest.Hash)
}
inline void AuthRequest::set_hash(const char* value) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:example_proto.AuthRequest.Hash)
}
inline void AuthRequest::set_hash(const char* value, size_t size) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:example_proto.AuthRequest.Hash)
}
inline ::std::string* AuthRequest::mutable_hash() {
  
  // @@protoc_insertion_point(field_mutable:example_proto.AuthRequest.Hash)
  return hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthRequest::release_hash() {
  
  return hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthRequest::set_allocated_hash(::std::string* hash) {
  if (hash != NULL) {
    
  } else {
    
  }
  hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hash);
  // @@protoc_insertion_point(field_set_allocated:example_proto.AuthRequest.Hash)
}

// -------------------------------------------------------------------

// SuccessfullAuthResponse

// optional string AuthToken = 1;
inline void SuccessfullAuthResponse::clear_authtoken() {
  authtoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SuccessfullAuthResponse::authtoken() const {
  // @@protoc_insertion_point(field_get:example_proto.SuccessfullAuthResponse.AuthToken)
  return authtoken_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SuccessfullAuthResponse::set_authtoken(const ::std::string& value) {
  
  authtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:example_proto.SuccessfullAuthResponse.AuthToken)
}
inline void SuccessfullAuthResponse::set_authtoken(const char* value) {
  
  authtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:example_proto.SuccessfullAuthResponse.AuthToken)
}
inline void SuccessfullAuthResponse::set_authtoken(const char* value, size_t size) {
  
  authtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:example_proto.SuccessfullAuthResponse.AuthToken)
}
inline ::std::string* SuccessfullAuthResponse::mutable_authtoken() {
  
  // @@protoc_insertion_point(field_mutable:example_proto.SuccessfullAuthResponse.AuthToken)
  return authtoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SuccessfullAuthResponse::release_authtoken() {
  
  return authtoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SuccessfullAuthResponse::set_allocated_authtoken(::std::string* authtoken) {
  if (authtoken != NULL) {
    
  } else {
    
  }
  authtoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), authtoken);
  // @@protoc_insertion_point(field_set_allocated:example_proto.SuccessfullAuthResponse.AuthToken)
}

// optional .example_proto.ExampleCharacter CharacterInfo = 2;
inline bool SuccessfullAuthResponse::has_characterinfo() const {
  return !_is_default_instance_ && characterinfo_ != NULL;
}
inline void SuccessfullAuthResponse::clear_characterinfo() {
  if (GetArenaNoVirtual() == NULL && characterinfo_ != NULL) delete characterinfo_;
  characterinfo_ = NULL;
}
inline const ::example_proto::ExampleCharacter& SuccessfullAuthResponse::characterinfo() const {
  // @@protoc_insertion_point(field_get:example_proto.SuccessfullAuthResponse.CharacterInfo)
  return characterinfo_ != NULL ? *characterinfo_ : *default_instance_->characterinfo_;
}
inline ::example_proto::ExampleCharacter* SuccessfullAuthResponse::mutable_characterinfo() {
  
  if (characterinfo_ == NULL) {
    characterinfo_ = new ::example_proto::ExampleCharacter;
  }
  // @@protoc_insertion_point(field_mutable:example_proto.SuccessfullAuthResponse.CharacterInfo)
  return characterinfo_;
}
inline ::example_proto::ExampleCharacter* SuccessfullAuthResponse::release_characterinfo() {
  
  ::example_proto::ExampleCharacter* temp = characterinfo_;
  characterinfo_ = NULL;
  return temp;
}
inline void SuccessfullAuthResponse::set_allocated_characterinfo(::example_proto::ExampleCharacter* characterinfo) {
  delete characterinfo_;
  characterinfo_ = characterinfo;
  if (characterinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:example_proto.SuccessfullAuthResponse.CharacterInfo)
}

// -------------------------------------------------------------------

// FailedAuthResponse

// optional string ErrorMessage = 1;
inline void FailedAuthResponse::clear_errormessage() {
  errormessage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FailedAuthResponse::errormessage() const {
  // @@protoc_insertion_point(field_get:example_proto.FailedAuthResponse.ErrorMessage)
  return errormessage_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FailedAuthResponse::set_errormessage(const ::std::string& value) {
  
  errormessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:example_proto.FailedAuthResponse.ErrorMessage)
}
inline void FailedAuthResponse::set_errormessage(const char* value) {
  
  errormessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:example_proto.FailedAuthResponse.ErrorMessage)
}
inline void FailedAuthResponse::set_errormessage(const char* value, size_t size) {
  
  errormessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:example_proto.FailedAuthResponse.ErrorMessage)
}
inline ::std::string* FailedAuthResponse::mutable_errormessage() {
  
  // @@protoc_insertion_point(field_mutable:example_proto.FailedAuthResponse.ErrorMessage)
  return errormessage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FailedAuthResponse::release_errormessage() {
  
  return errormessage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FailedAuthResponse::set_allocated_errormessage(::std::string* errormessage) {
  if (errormessage != NULL) {
    
  } else {
    
  }
  errormessage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errormessage);
  // @@protoc_insertion_point(field_set_allocated:example_proto.FailedAuthResponse.ErrorMessage)
}

// -------------------------------------------------------------------

// AuthResponse

// optional .example_proto.SuccessfullAuthResponse SuccessfullAuthData = 1;
inline bool AuthResponse::has_successfullauthdata() const {
  return AuthResponse_Oneof_case() == kSuccessfullAuthData;
}
inline void AuthResponse::set_has_successfullauthdata() {
  _oneof_case_[0] = kSuccessfullAuthData;
}
inline void AuthResponse::clear_successfullauthdata() {
  if (has_successfullauthdata()) {
    delete AuthResponse_Oneof_.successfullauthdata_;
    clear_has_AuthResponse_Oneof();
  }
}
inline  const ::example_proto::SuccessfullAuthResponse& AuthResponse::successfullauthdata() const {
  // @@protoc_insertion_point(field_get:example_proto.AuthResponse.SuccessfullAuthData)
  return has_successfullauthdata()
      ? *AuthResponse_Oneof_.successfullauthdata_
      : ::example_proto::SuccessfullAuthResponse::default_instance();
}
inline ::example_proto::SuccessfullAuthResponse* AuthResponse::mutable_successfullauthdata() {
  if (!has_successfullauthdata()) {
    clear_AuthResponse_Oneof();
    set_has_successfullauthdata();
    AuthResponse_Oneof_.successfullauthdata_ = new ::example_proto::SuccessfullAuthResponse;
  }
  // @@protoc_insertion_point(field_mutable:example_proto.AuthResponse.SuccessfullAuthData)
  return AuthResponse_Oneof_.successfullauthdata_;
}
inline ::example_proto::SuccessfullAuthResponse* AuthResponse::release_successfullauthdata() {
  if (has_successfullauthdata()) {
    clear_has_AuthResponse_Oneof();
    ::example_proto::SuccessfullAuthResponse* temp = AuthResponse_Oneof_.successfullauthdata_;
    AuthResponse_Oneof_.successfullauthdata_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void AuthResponse::set_allocated_successfullauthdata(::example_proto::SuccessfullAuthResponse* successfullauthdata) {
  clear_AuthResponse_Oneof();
  if (successfullauthdata) {
    set_has_successfullauthdata();
    AuthResponse_Oneof_.successfullauthdata_ = successfullauthdata;
  }
  // @@protoc_insertion_point(field_set_allocated:example_proto.AuthResponse.SuccessfullAuthData)
}

// optional .example_proto.FailedAuthResponse FailedAuthData = 2;
inline bool AuthResponse::has_failedauthdata() const {
  return AuthResponse_Oneof_case() == kFailedAuthData;
}
inline void AuthResponse::set_has_failedauthdata() {
  _oneof_case_[0] = kFailedAuthData;
}
inline void AuthResponse::clear_failedauthdata() {
  if (has_failedauthdata()) {
    delete AuthResponse_Oneof_.failedauthdata_;
    clear_has_AuthResponse_Oneof();
  }
}
inline  const ::example_proto::FailedAuthResponse& AuthResponse::failedauthdata() const {
  // @@protoc_insertion_point(field_get:example_proto.AuthResponse.FailedAuthData)
  return has_failedauthdata()
      ? *AuthResponse_Oneof_.failedauthdata_
      : ::example_proto::FailedAuthResponse::default_instance();
}
inline ::example_proto::FailedAuthResponse* AuthResponse::mutable_failedauthdata() {
  if (!has_failedauthdata()) {
    clear_AuthResponse_Oneof();
    set_has_failedauthdata();
    AuthResponse_Oneof_.failedauthdata_ = new ::example_proto::FailedAuthResponse;
  }
  // @@protoc_insertion_point(field_mutable:example_proto.AuthResponse.FailedAuthData)
  return AuthResponse_Oneof_.failedauthdata_;
}
inline ::example_proto::FailedAuthResponse* AuthResponse::release_failedauthdata() {
  if (has_failedauthdata()) {
    clear_has_AuthResponse_Oneof();
    ::example_proto::FailedAuthResponse* temp = AuthResponse_Oneof_.failedauthdata_;
    AuthResponse_Oneof_.failedauthdata_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void AuthResponse::set_allocated_failedauthdata(::example_proto::FailedAuthResponse* failedauthdata) {
  clear_AuthResponse_Oneof();
  if (failedauthdata) {
    set_has_failedauthdata();
    AuthResponse_Oneof_.failedauthdata_ = failedauthdata;
  }
  // @@protoc_insertion_point(field_set_allocated:example_proto.AuthResponse.FailedAuthData)
}

inline bool AuthResponse::has_AuthResponse_Oneof() const {
  return AuthResponse_Oneof_case() != AUTHRESPONSE_ONEOF_NOT_SET;
}
inline void AuthResponse::clear_has_AuthResponse_Oneof() {
  _oneof_case_[0] = AUTHRESPONSE_ONEOF_NOT_SET;
}
inline AuthResponse::AuthResponseOneofCase AuthResponse::AuthResponse_Oneof_case() const {
  return AuthResponse::AuthResponseOneofCase(_oneof_case_[0]);
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace example_proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ExampleService_2eproto__INCLUDED
