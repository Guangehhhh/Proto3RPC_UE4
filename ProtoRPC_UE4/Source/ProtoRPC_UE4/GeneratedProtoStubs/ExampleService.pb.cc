// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ExampleService.proto

#if WITH_GOOGLE_PROTOBUF_BINDING == 1
#include "AllowWindowsPlatformTypes.h"
#endif // WITH_GOOGLE_PROTOBUF_BINDING

#if _MSC_VER >= 1300
#ifndef _PS3
#pragma warning(push)
#pragma warning(disable : 4530)	// warning C4530: C++ exception handler used, but unwind semantics are not enabled. Specify /EHsc (disabled due to std headers having exception syntax)
#pragma warning(disable : 4512)	// warning C4512: assignment operator could not be generated
#pragma warning(disable : 4244)	// warning C4244:  warning C4244: '=' : conversion from '__w64 int' to 'int', possible loss of data
#pragma warning(disable : 4267)	// warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
#pragma warning(disable : 4125)	// warning C4125: decimal digit terminates octal escape sequence
#pragma warning(disable : 4127)	// warning C4127: conditional expression is constant
#pragma warning(disable : 4100)	// warning C4100: 'op' : unreferenced formal parameter
#endif // _PS3
#endif // _MSC_VER
#if _GNUC
#ifndef _PS3
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wshadow"
#endif // _PS3
#endif // _GNUC

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ExampleService.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace example_proto {

namespace {

const ::google::protobuf::Descriptor* AuthRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AuthRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SuccessfullAuthResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SuccessfullAuthResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* FailedAuthResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FailedAuthResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* AuthResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AuthResponse_reflection_ = NULL;
struct AuthResponseOneofInstance {
  const ::example_proto::SuccessfullAuthResponse* successfullauthdata_;
  const ::example_proto::FailedAuthResponse* failedauthdata_;
}* AuthResponse_default_oneof_instance_ = NULL;
const ::google::protobuf::ServiceDescriptor* AuthService_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_ExampleService_2eproto() {
  protobuf_AddDesc_ExampleService_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ExampleService.proto");
  GOOGLE_CHECK(file != NULL);
  AuthRequest_descriptor_ = file->message_type(0);
  static const int AuthRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthRequest, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthRequest, hash_),
  };
  AuthRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AuthRequest_descriptor_,
      AuthRequest::default_instance_,
      AuthRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(AuthRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthRequest, _is_default_instance_));
  SuccessfullAuthResponse_descriptor_ = file->message_type(1);
  static const int SuccessfullAuthResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SuccessfullAuthResponse, authtoken_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SuccessfullAuthResponse, characterinfo_),
  };
  SuccessfullAuthResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SuccessfullAuthResponse_descriptor_,
      SuccessfullAuthResponse::default_instance_,
      SuccessfullAuthResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(SuccessfullAuthResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SuccessfullAuthResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SuccessfullAuthResponse, _is_default_instance_));
  FailedAuthResponse_descriptor_ = file->message_type(2);
  static const int FailedAuthResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FailedAuthResponse, errormessage_),
  };
  FailedAuthResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FailedAuthResponse_descriptor_,
      FailedAuthResponse::default_instance_,
      FailedAuthResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(FailedAuthResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FailedAuthResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FailedAuthResponse, _is_default_instance_));
  AuthResponse_descriptor_ = file->message_type(3);
  static const int AuthResponse_offsets_[3] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AuthResponse_default_oneof_instance_, successfullauthdata_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AuthResponse_default_oneof_instance_, failedauthdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthResponse, AuthResponse_Oneof_),
  };
  AuthResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AuthResponse_descriptor_,
      AuthResponse::default_instance_,
      AuthResponse_offsets_,
      -1,
      -1,
      -1,
      AuthResponse_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthResponse, _oneof_case_[0]),
      sizeof(AuthResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthResponse, _is_default_instance_));
  AuthService_descriptor_ = file->service(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ExampleService_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AuthRequest_descriptor_, &AuthRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SuccessfullAuthResponse_descriptor_, &SuccessfullAuthResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FailedAuthResponse_descriptor_, &FailedAuthResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AuthResponse_descriptor_, &AuthResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ExampleService_2eproto() {
  delete AuthRequest::default_instance_;
  delete AuthRequest_reflection_;
  delete SuccessfullAuthResponse::default_instance_;
  delete SuccessfullAuthResponse_reflection_;
  delete FailedAuthResponse::default_instance_;
  delete FailedAuthResponse_reflection_;
  delete AuthResponse::default_instance_;
  delete AuthResponse_default_oneof_instance_;
  delete AuthResponse_reflection_;
}

void protobuf_AddDesc_ExampleService_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::example_proto::protobuf_AddDesc_ExampleCharacter_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024ExampleService.proto\022\rexample_proto\032\026E"
    "xampleCharacter.proto\"-\n\013AuthRequest\022\020\n\010"
    "Username\030\001 \001(\t\022\014\n\004Hash\030\002 \001(\t\"d\n\027Successf"
    "ullAuthResponse\022\021\n\tAuthToken\030\001 \001(\t\0226\n\rCh"
    "aracterInfo\030\002 \001(\0132\037.example_proto.Exampl"
    "eCharacter\"*\n\022FailedAuthResponse\022\024\n\014Erro"
    "rMessage\030\001 \001(\t\"\250\001\n\014AuthResponse\022E\n\023Succe"
    "ssfullAuthData\030\001 \001(\0132&.example_proto.Suc"
    "cessfullAuthResponseH\000\022;\n\016FailedAuthData"
    "\030\002 \001(\0132!.example_proto.FailedAuthRespons"
    "eH\000B\024\n\022AuthResponse_Oneof2V\n\013AuthService"
    "\022G\n\014Authenticate\022\032.example_proto.AuthReq"
    "uest\032\033.example_proto.AuthResponseB\003\200\001\001b\006"
    "proto3", 526);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ExampleService.proto", &protobuf_RegisterTypes);
  AuthRequest::default_instance_ = new AuthRequest();
  SuccessfullAuthResponse::default_instance_ = new SuccessfullAuthResponse();
  FailedAuthResponse::default_instance_ = new FailedAuthResponse();
  AuthResponse::default_instance_ = new AuthResponse();
  AuthResponse_default_oneof_instance_ = new AuthResponseOneofInstance();
  AuthRequest::default_instance_->InitAsDefaultInstance();
  SuccessfullAuthResponse::default_instance_->InitAsDefaultInstance();
  FailedAuthResponse::default_instance_->InitAsDefaultInstance();
  AuthResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ExampleService_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ExampleService_2eproto {
  StaticDescriptorInitializer_ExampleService_2eproto() {
    protobuf_AddDesc_ExampleService_2eproto();
  }
} static_descriptor_initializer_ExampleService_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int AuthRequest::kUsernameFieldNumber;
const int AuthRequest::kHashFieldNumber;
#endif  // !_MSC_VER

AuthRequest::AuthRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:example_proto.AuthRequest)
}

void AuthRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

AuthRequest::AuthRequest(const AuthRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:example_proto.AuthRequest)
}

void AuthRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AuthRequest::~AuthRequest() {
  // @@protoc_insertion_point(destructor:example_proto.AuthRequest)
  SharedDtor();
}

void AuthRequest::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void AuthRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AuthRequest_descriptor_;
}

const AuthRequest& AuthRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ExampleService_2eproto();
  return *default_instance_;
}

AuthRequest* AuthRequest::default_instance_ = NULL;

AuthRequest* AuthRequest::New(::google::protobuf::Arena* arena) const {
  AuthRequest* n = new AuthRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthRequest::Clear() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AuthRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:example_proto.AuthRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Username = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "example_proto.AuthRequest.Username"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Hash;
        break;
      }

      // optional string Hash = 2;
      case 2: {
        if (tag == 18) {
         parse_Hash:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hash()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hash().data(), this->hash().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "example_proto.AuthRequest.Hash"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:example_proto.AuthRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:example_proto.AuthRequest)
  return false;
#undef DO_
}

void AuthRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:example_proto.AuthRequest)
  // optional string Username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "example_proto.AuthRequest.Username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // optional string Hash = 2;
  if (this->hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hash().data(), this->hash().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "example_proto.AuthRequest.Hash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->hash(), output);
  }

  // @@protoc_insertion_point(serialize_end:example_proto.AuthRequest)
}

::google::protobuf::uint8* AuthRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:example_proto.AuthRequest)
  // optional string Username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "example_proto.AuthRequest.Username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // optional string Hash = 2;
  if (this->hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hash().data(), this->hash().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "example_proto.AuthRequest.Hash");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->hash(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:example_proto.AuthRequest)
  return target;
}

int AuthRequest::ByteSize() const {
  int total_size = 0;

  // optional string Username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // optional string Hash = 2;
  if (this->hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hash());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthRequest::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AuthRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthRequest>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AuthRequest::MergeFrom(const AuthRequest& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.hash().size() > 0) {

    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
}

void AuthRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthRequest::CopyFrom(const AuthRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthRequest::IsInitialized() const {

  return true;
}

void AuthRequest::Swap(AuthRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthRequest::InternalSwap(AuthRequest* other) {
  username_.Swap(&other->username_);
  hash_.Swap(&other->hash_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AuthRequest_descriptor_;
  metadata.reflection = AuthRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AuthRequest

// optional string Username = 1;
void AuthRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& AuthRequest::username() const {
  // @@protoc_insertion_point(field_get:example_proto.AuthRequest.Username)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AuthRequest::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:example_proto.AuthRequest.Username)
}
 void AuthRequest::set_username(const char* value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:example_proto.AuthRequest.Username)
}
 void AuthRequest::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:example_proto.AuthRequest.Username)
}
 ::std::string* AuthRequest::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:example_proto.AuthRequest.Username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AuthRequest::release_username() {
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AuthRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:example_proto.AuthRequest.Username)
}

// optional string Hash = 2;
void AuthRequest::clear_hash() {
  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& AuthRequest::hash() const {
  // @@protoc_insertion_point(field_get:example_proto.AuthRequest.Hash)
  return hash_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AuthRequest::set_hash(const ::std::string& value) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:example_proto.AuthRequest.Hash)
}
 void AuthRequest::set_hash(const char* value) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:example_proto.AuthRequest.Hash)
}
 void AuthRequest::set_hash(const char* value, size_t size) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:example_proto.AuthRequest.Hash)
}
 ::std::string* AuthRequest::mutable_hash() {
  
  // @@protoc_insertion_point(field_mutable:example_proto.AuthRequest.Hash)
  return hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AuthRequest::release_hash() {
  
  return hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AuthRequest::set_allocated_hash(::std::string* hash) {
  if (hash != NULL) {
    
  } else {
    
  }
  hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hash);
  // @@protoc_insertion_point(field_set_allocated:example_proto.AuthRequest.Hash)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int SuccessfullAuthResponse::kAuthTokenFieldNumber;
const int SuccessfullAuthResponse::kCharacterInfoFieldNumber;
#endif  // !_MSC_VER

SuccessfullAuthResponse::SuccessfullAuthResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:example_proto.SuccessfullAuthResponse)
}

void SuccessfullAuthResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  characterinfo_ = const_cast< ::example_proto::ExampleCharacter*>(&::example_proto::ExampleCharacter::default_instance());
}

SuccessfullAuthResponse::SuccessfullAuthResponse(const SuccessfullAuthResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:example_proto.SuccessfullAuthResponse)
}

void SuccessfullAuthResponse::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  authtoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  characterinfo_ = NULL;
}

SuccessfullAuthResponse::~SuccessfullAuthResponse() {
  // @@protoc_insertion_point(destructor:example_proto.SuccessfullAuthResponse)
  SharedDtor();
}

void SuccessfullAuthResponse::SharedDtor() {
  authtoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete characterinfo_;
  }
}

void SuccessfullAuthResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SuccessfullAuthResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SuccessfullAuthResponse_descriptor_;
}

const SuccessfullAuthResponse& SuccessfullAuthResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ExampleService_2eproto();
  return *default_instance_;
}

SuccessfullAuthResponse* SuccessfullAuthResponse::default_instance_ = NULL;

SuccessfullAuthResponse* SuccessfullAuthResponse::New(::google::protobuf::Arena* arena) const {
  SuccessfullAuthResponse* n = new SuccessfullAuthResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SuccessfullAuthResponse::Clear() {
  authtoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && characterinfo_ != NULL) delete characterinfo_;
  characterinfo_ = NULL;
}

bool SuccessfullAuthResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:example_proto.SuccessfullAuthResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string AuthToken = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_authtoken()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->authtoken().data(), this->authtoken().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "example_proto.SuccessfullAuthResponse.AuthToken"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_CharacterInfo;
        break;
      }

      // optional .example_proto.ExampleCharacter CharacterInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_CharacterInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_characterinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:example_proto.SuccessfullAuthResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:example_proto.SuccessfullAuthResponse)
  return false;
#undef DO_
}

void SuccessfullAuthResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:example_proto.SuccessfullAuthResponse)
  // optional string AuthToken = 1;
  if (this->authtoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->authtoken().data(), this->authtoken().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "example_proto.SuccessfullAuthResponse.AuthToken");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->authtoken(), output);
  }

  // optional .example_proto.ExampleCharacter CharacterInfo = 2;
  if (this->has_characterinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->characterinfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:example_proto.SuccessfullAuthResponse)
}

::google::protobuf::uint8* SuccessfullAuthResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:example_proto.SuccessfullAuthResponse)
  // optional string AuthToken = 1;
  if (this->authtoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->authtoken().data(), this->authtoken().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "example_proto.SuccessfullAuthResponse.AuthToken");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->authtoken(), target);
  }

  // optional .example_proto.ExampleCharacter CharacterInfo = 2;
  if (this->has_characterinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->characterinfo_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:example_proto.SuccessfullAuthResponse)
  return target;
}

int SuccessfullAuthResponse::ByteSize() const {
  int total_size = 0;

  // optional string AuthToken = 1;
  if (this->authtoken().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->authtoken());
  }

  // optional .example_proto.ExampleCharacter CharacterInfo = 2;
  if (this->has_characterinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->characterinfo_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SuccessfullAuthResponse::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SuccessfullAuthResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SuccessfullAuthResponse>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SuccessfullAuthResponse::MergeFrom(const SuccessfullAuthResponse& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.authtoken().size() > 0) {

    authtoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.authtoken_);
  }
  if (from.has_characterinfo()) {
    mutable_characterinfo()->::example_proto::ExampleCharacter::MergeFrom(from.characterinfo());
  }
}

void SuccessfullAuthResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SuccessfullAuthResponse::CopyFrom(const SuccessfullAuthResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SuccessfullAuthResponse::IsInitialized() const {

  return true;
}

void SuccessfullAuthResponse::Swap(SuccessfullAuthResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SuccessfullAuthResponse::InternalSwap(SuccessfullAuthResponse* other) {
  authtoken_.Swap(&other->authtoken_);
  std::swap(characterinfo_, other->characterinfo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SuccessfullAuthResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SuccessfullAuthResponse_descriptor_;
  metadata.reflection = SuccessfullAuthResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SuccessfullAuthResponse

// optional string AuthToken = 1;
void SuccessfullAuthResponse::clear_authtoken() {
  authtoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SuccessfullAuthResponse::authtoken() const {
  // @@protoc_insertion_point(field_get:example_proto.SuccessfullAuthResponse.AuthToken)
  return authtoken_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SuccessfullAuthResponse::set_authtoken(const ::std::string& value) {
  
  authtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:example_proto.SuccessfullAuthResponse.AuthToken)
}
 void SuccessfullAuthResponse::set_authtoken(const char* value) {
  
  authtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:example_proto.SuccessfullAuthResponse.AuthToken)
}
 void SuccessfullAuthResponse::set_authtoken(const char* value, size_t size) {
  
  authtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:example_proto.SuccessfullAuthResponse.AuthToken)
}
 ::std::string* SuccessfullAuthResponse::mutable_authtoken() {
  
  // @@protoc_insertion_point(field_mutable:example_proto.SuccessfullAuthResponse.AuthToken)
  return authtoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SuccessfullAuthResponse::release_authtoken() {
  
  return authtoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SuccessfullAuthResponse::set_allocated_authtoken(::std::string* authtoken) {
  if (authtoken != NULL) {
    
  } else {
    
  }
  authtoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), authtoken);
  // @@protoc_insertion_point(field_set_allocated:example_proto.SuccessfullAuthResponse.AuthToken)
}

// optional .example_proto.ExampleCharacter CharacterInfo = 2;
bool SuccessfullAuthResponse::has_characterinfo() const {
  return !_is_default_instance_ && characterinfo_ != NULL;
}
void SuccessfullAuthResponse::clear_characterinfo() {
  if (GetArenaNoVirtual() == NULL && characterinfo_ != NULL) delete characterinfo_;
  characterinfo_ = NULL;
}
const ::example_proto::ExampleCharacter& SuccessfullAuthResponse::characterinfo() const {
  // @@protoc_insertion_point(field_get:example_proto.SuccessfullAuthResponse.CharacterInfo)
  return characterinfo_ != NULL ? *characterinfo_ : *default_instance_->characterinfo_;
}
::example_proto::ExampleCharacter* SuccessfullAuthResponse::mutable_characterinfo() {
  
  if (characterinfo_ == NULL) {
    characterinfo_ = new ::example_proto::ExampleCharacter;
  }
  // @@protoc_insertion_point(field_mutable:example_proto.SuccessfullAuthResponse.CharacterInfo)
  return characterinfo_;
}
::example_proto::ExampleCharacter* SuccessfullAuthResponse::release_characterinfo() {
  
  ::example_proto::ExampleCharacter* temp = characterinfo_;
  characterinfo_ = NULL;
  return temp;
}
void SuccessfullAuthResponse::set_allocated_characterinfo(::example_proto::ExampleCharacter* characterinfo) {
  delete characterinfo_;
  characterinfo_ = characterinfo;
  if (characterinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:example_proto.SuccessfullAuthResponse.CharacterInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int FailedAuthResponse::kErrorMessageFieldNumber;
#endif  // !_MSC_VER

FailedAuthResponse::FailedAuthResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:example_proto.FailedAuthResponse)
}

void FailedAuthResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

FailedAuthResponse::FailedAuthResponse(const FailedAuthResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:example_proto.FailedAuthResponse)
}

void FailedAuthResponse::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  errormessage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

FailedAuthResponse::~FailedAuthResponse() {
  // @@protoc_insertion_point(destructor:example_proto.FailedAuthResponse)
  SharedDtor();
}

void FailedAuthResponse::SharedDtor() {
  errormessage_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void FailedAuthResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FailedAuthResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FailedAuthResponse_descriptor_;
}

const FailedAuthResponse& FailedAuthResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ExampleService_2eproto();
  return *default_instance_;
}

FailedAuthResponse* FailedAuthResponse::default_instance_ = NULL;

FailedAuthResponse* FailedAuthResponse::New(::google::protobuf::Arena* arena) const {
  FailedAuthResponse* n = new FailedAuthResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FailedAuthResponse::Clear() {
  errormessage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool FailedAuthResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:example_proto.FailedAuthResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ErrorMessage = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errormessage()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errormessage().data(), this->errormessage().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "example_proto.FailedAuthResponse.ErrorMessage"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:example_proto.FailedAuthResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:example_proto.FailedAuthResponse)
  return false;
#undef DO_
}

void FailedAuthResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:example_proto.FailedAuthResponse)
  // optional string ErrorMessage = 1;
  if (this->errormessage().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errormessage().data(), this->errormessage().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "example_proto.FailedAuthResponse.ErrorMessage");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->errormessage(), output);
  }

  // @@protoc_insertion_point(serialize_end:example_proto.FailedAuthResponse)
}

::google::protobuf::uint8* FailedAuthResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:example_proto.FailedAuthResponse)
  // optional string ErrorMessage = 1;
  if (this->errormessage().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errormessage().data(), this->errormessage().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "example_proto.FailedAuthResponse.ErrorMessage");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->errormessage(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:example_proto.FailedAuthResponse)
  return target;
}

int FailedAuthResponse::ByteSize() const {
  int total_size = 0;

  // optional string ErrorMessage = 1;
  if (this->errormessage().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errormessage());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FailedAuthResponse::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FailedAuthResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const FailedAuthResponse>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FailedAuthResponse::MergeFrom(const FailedAuthResponse& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.errormessage().size() > 0) {

    errormessage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errormessage_);
  }
}

void FailedAuthResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FailedAuthResponse::CopyFrom(const FailedAuthResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FailedAuthResponse::IsInitialized() const {

  return true;
}

void FailedAuthResponse::Swap(FailedAuthResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FailedAuthResponse::InternalSwap(FailedAuthResponse* other) {
  errormessage_.Swap(&other->errormessage_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FailedAuthResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FailedAuthResponse_descriptor_;
  metadata.reflection = FailedAuthResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FailedAuthResponse

// optional string ErrorMessage = 1;
void FailedAuthResponse::clear_errormessage() {
  errormessage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& FailedAuthResponse::errormessage() const {
  // @@protoc_insertion_point(field_get:example_proto.FailedAuthResponse.ErrorMessage)
  return errormessage_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FailedAuthResponse::set_errormessage(const ::std::string& value) {
  
  errormessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:example_proto.FailedAuthResponse.ErrorMessage)
}
 void FailedAuthResponse::set_errormessage(const char* value) {
  
  errormessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:example_proto.FailedAuthResponse.ErrorMessage)
}
 void FailedAuthResponse::set_errormessage(const char* value, size_t size) {
  
  errormessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:example_proto.FailedAuthResponse.ErrorMessage)
}
 ::std::string* FailedAuthResponse::mutable_errormessage() {
  
  // @@protoc_insertion_point(field_mutable:example_proto.FailedAuthResponse.ErrorMessage)
  return errormessage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* FailedAuthResponse::release_errormessage() {
  
  return errormessage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FailedAuthResponse::set_allocated_errormessage(::std::string* errormessage) {
  if (errormessage != NULL) {
    
  } else {
    
  }
  errormessage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errormessage);
  // @@protoc_insertion_point(field_set_allocated:example_proto.FailedAuthResponse.ErrorMessage)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int AuthResponse::kSuccessfullAuthDataFieldNumber;
const int AuthResponse::kFailedAuthDataFieldNumber;
#endif  // !_MSC_VER

AuthResponse::AuthResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:example_proto.AuthResponse)
}

void AuthResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  AuthResponse_default_oneof_instance_->successfullauthdata_ = const_cast< ::example_proto::SuccessfullAuthResponse*>(&::example_proto::SuccessfullAuthResponse::default_instance());
  AuthResponse_default_oneof_instance_->failedauthdata_ = const_cast< ::example_proto::FailedAuthResponse*>(&::example_proto::FailedAuthResponse::default_instance());
}

AuthResponse::AuthResponse(const AuthResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:example_proto.AuthResponse)
}

void AuthResponse::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  clear_has_AuthResponse_Oneof();
}

AuthResponse::~AuthResponse() {
  // @@protoc_insertion_point(destructor:example_proto.AuthResponse)
  SharedDtor();
}

void AuthResponse::SharedDtor() {
  if (has_AuthResponse_Oneof()) {
    clear_AuthResponse_Oneof();
  }
  if (this != default_instance_) {
  }
}

void AuthResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AuthResponse_descriptor_;
}

const AuthResponse& AuthResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ExampleService_2eproto();
  return *default_instance_;
}

AuthResponse* AuthResponse::default_instance_ = NULL;

AuthResponse* AuthResponse::New(::google::protobuf::Arena* arena) const {
  AuthResponse* n = new AuthResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthResponse::clear_AuthResponse_Oneof() {
  switch(AuthResponse_Oneof_case()) {
    case kSuccessfullAuthData: {
      delete AuthResponse_Oneof_.successfullauthdata_;
      break;
    }
    case kFailedAuthData: {
      delete AuthResponse_Oneof_.failedauthdata_;
      break;
    }
    case AUTHRESPONSE_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = AUTHRESPONSE_ONEOF_NOT_SET;
}


void AuthResponse::Clear() {
  clear_AuthResponse_Oneof();
}

bool AuthResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:example_proto.AuthResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .example_proto.SuccessfullAuthResponse SuccessfullAuthData = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_successfullauthdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_FailedAuthData;
        break;
      }

      // optional .example_proto.FailedAuthResponse FailedAuthData = 2;
      case 2: {
        if (tag == 18) {
         parse_FailedAuthData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_failedauthdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:example_proto.AuthResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:example_proto.AuthResponse)
  return false;
#undef DO_
}

void AuthResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:example_proto.AuthResponse)
  // optional .example_proto.SuccessfullAuthResponse SuccessfullAuthData = 1;
  if (has_successfullauthdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *AuthResponse_Oneof_.successfullauthdata_, output);
  }

  // optional .example_proto.FailedAuthResponse FailedAuthData = 2;
  if (has_failedauthdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *AuthResponse_Oneof_.failedauthdata_, output);
  }

  // @@protoc_insertion_point(serialize_end:example_proto.AuthResponse)
}

::google::protobuf::uint8* AuthResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:example_proto.AuthResponse)
  // optional .example_proto.SuccessfullAuthResponse SuccessfullAuthData = 1;
  if (has_successfullauthdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *AuthResponse_Oneof_.successfullauthdata_, target);
  }

  // optional .example_proto.FailedAuthResponse FailedAuthData = 2;
  if (has_failedauthdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *AuthResponse_Oneof_.failedauthdata_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:example_proto.AuthResponse)
  return target;
}

int AuthResponse::ByteSize() const {
  int total_size = 0;

  switch (AuthResponse_Oneof_case()) {
    // optional .example_proto.SuccessfullAuthResponse SuccessfullAuthData = 1;
    case kSuccessfullAuthData: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *AuthResponse_Oneof_.successfullauthdata_);
      break;
    }
    // optional .example_proto.FailedAuthResponse FailedAuthData = 2;
    case kFailedAuthData: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *AuthResponse_Oneof_.failedauthdata_);
      break;
    }
    case AUTHRESPONSE_ONEOF_NOT_SET: {
      break;
    }
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthResponse::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AuthResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthResponse>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AuthResponse::MergeFrom(const AuthResponse& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  switch (from.AuthResponse_Oneof_case()) {
    case kSuccessfullAuthData: {
      mutable_successfullauthdata()->::example_proto::SuccessfullAuthResponse::MergeFrom(from.successfullauthdata());
      break;
    }
    case kFailedAuthData: {
      mutable_failedauthdata()->::example_proto::FailedAuthResponse::MergeFrom(from.failedauthdata());
      break;
    }
    case AUTHRESPONSE_ONEOF_NOT_SET: {
      break;
    }
  }
}

void AuthResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthResponse::CopyFrom(const AuthResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthResponse::IsInitialized() const {

  return true;
}

void AuthResponse::Swap(AuthResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthResponse::InternalSwap(AuthResponse* other) {
  std::swap(AuthResponse_Oneof_, other->AuthResponse_Oneof_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AuthResponse_descriptor_;
  metadata.reflection = AuthResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AuthResponse

// optional .example_proto.SuccessfullAuthResponse SuccessfullAuthData = 1;
bool AuthResponse::has_successfullauthdata() const {
  return AuthResponse_Oneof_case() == kSuccessfullAuthData;
}
void AuthResponse::set_has_successfullauthdata() {
  _oneof_case_[0] = kSuccessfullAuthData;
}
void AuthResponse::clear_successfullauthdata() {
  if (has_successfullauthdata()) {
    delete AuthResponse_Oneof_.successfullauthdata_;
    clear_has_AuthResponse_Oneof();
  }
}
 const ::example_proto::SuccessfullAuthResponse& AuthResponse::successfullauthdata() const {
  // @@protoc_insertion_point(field_get:example_proto.AuthResponse.SuccessfullAuthData)
  return has_successfullauthdata()
      ? *AuthResponse_Oneof_.successfullauthdata_
      : ::example_proto::SuccessfullAuthResponse::default_instance();
}
::example_proto::SuccessfullAuthResponse* AuthResponse::mutable_successfullauthdata() {
  if (!has_successfullauthdata()) {
    clear_AuthResponse_Oneof();
    set_has_successfullauthdata();
    AuthResponse_Oneof_.successfullauthdata_ = new ::example_proto::SuccessfullAuthResponse;
  }
  // @@protoc_insertion_point(field_mutable:example_proto.AuthResponse.SuccessfullAuthData)
  return AuthResponse_Oneof_.successfullauthdata_;
}
::example_proto::SuccessfullAuthResponse* AuthResponse::release_successfullauthdata() {
  if (has_successfullauthdata()) {
    clear_has_AuthResponse_Oneof();
    ::example_proto::SuccessfullAuthResponse* temp = AuthResponse_Oneof_.successfullauthdata_;
    AuthResponse_Oneof_.successfullauthdata_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void AuthResponse::set_allocated_successfullauthdata(::example_proto::SuccessfullAuthResponse* successfullauthdata) {
  clear_AuthResponse_Oneof();
  if (successfullauthdata) {
    set_has_successfullauthdata();
    AuthResponse_Oneof_.successfullauthdata_ = successfullauthdata;
  }
  // @@protoc_insertion_point(field_set_allocated:example_proto.AuthResponse.SuccessfullAuthData)
}

// optional .example_proto.FailedAuthResponse FailedAuthData = 2;
bool AuthResponse::has_failedauthdata() const {
  return AuthResponse_Oneof_case() == kFailedAuthData;
}
void AuthResponse::set_has_failedauthdata() {
  _oneof_case_[0] = kFailedAuthData;
}
void AuthResponse::clear_failedauthdata() {
  if (has_failedauthdata()) {
    delete AuthResponse_Oneof_.failedauthdata_;
    clear_has_AuthResponse_Oneof();
  }
}
 const ::example_proto::FailedAuthResponse& AuthResponse::failedauthdata() const {
  // @@protoc_insertion_point(field_get:example_proto.AuthResponse.FailedAuthData)
  return has_failedauthdata()
      ? *AuthResponse_Oneof_.failedauthdata_
      : ::example_proto::FailedAuthResponse::default_instance();
}
::example_proto::FailedAuthResponse* AuthResponse::mutable_failedauthdata() {
  if (!has_failedauthdata()) {
    clear_AuthResponse_Oneof();
    set_has_failedauthdata();
    AuthResponse_Oneof_.failedauthdata_ = new ::example_proto::FailedAuthResponse;
  }
  // @@protoc_insertion_point(field_mutable:example_proto.AuthResponse.FailedAuthData)
  return AuthResponse_Oneof_.failedauthdata_;
}
::example_proto::FailedAuthResponse* AuthResponse::release_failedauthdata() {
  if (has_failedauthdata()) {
    clear_has_AuthResponse_Oneof();
    ::example_proto::FailedAuthResponse* temp = AuthResponse_Oneof_.failedauthdata_;
    AuthResponse_Oneof_.failedauthdata_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void AuthResponse::set_allocated_failedauthdata(::example_proto::FailedAuthResponse* failedauthdata) {
  clear_AuthResponse_Oneof();
  if (failedauthdata) {
    set_has_failedauthdata();
    AuthResponse_Oneof_.failedauthdata_ = failedauthdata;
  }
  // @@protoc_insertion_point(field_set_allocated:example_proto.AuthResponse.FailedAuthData)
}

bool AuthResponse::has_AuthResponse_Oneof() const {
  return AuthResponse_Oneof_case() != AUTHRESPONSE_ONEOF_NOT_SET;
}
void AuthResponse::clear_has_AuthResponse_Oneof() {
  _oneof_case_[0] = AUTHRESPONSE_ONEOF_NOT_SET;
}
AuthResponse::AuthResponseOneofCase AuthResponse::AuthResponse_Oneof_case() const {
  return AuthResponse::AuthResponseOneofCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

AuthService::~AuthService() {}

const ::google::protobuf::ServiceDescriptor* AuthService::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AuthService_descriptor_;
}

const ::google::protobuf::ServiceDescriptor* AuthService::GetDescriptor() {
  protobuf_AssignDescriptorsOnce();
  return AuthService_descriptor_;
}

void AuthService::Authenticate(::google::protobuf::RpcController* controller,
                         const ::example_proto::AuthRequest*,
                         ::example_proto::AuthResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Authenticate() not implemented.");
  done->Run();
}

void AuthService::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), AuthService_descriptor_);
  switch(method->index()) {
    case 0:
      Authenticate(controller,
             ::google::protobuf::down_cast<const ::example_proto::AuthRequest*>(request),
             ::google::protobuf::down_cast< ::example_proto::AuthResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& AuthService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::example_proto::AuthRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *static_cast< ::google::protobuf::Message*>(NULL);
  }
}

const ::google::protobuf::Message& AuthService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::example_proto::AuthResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *static_cast< ::google::protobuf::Message*>(NULL);
  }
}

AuthService_Stub::AuthService_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
AuthService_Stub::AuthService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
AuthService_Stub::~AuthService_Stub() {
  if (owns_channel_) delete channel_;
}

void AuthService_Stub::Authenticate(::google::protobuf::RpcController* controller,
                              const ::example_proto::AuthRequest* request,
                              ::example_proto::AuthResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)

}  // namespace example_proto

// @@protoc_insertion_point(global_scope)

#if _MSC_VER >= 1300
#ifndef _PS3
#pragma warning( pop )
#endif // _PS3
#endif // _MSC_VER
#if _GNUC
#ifndef _PS3
#pragma GCC diagnostic pop
#endif // _PS3
#endif // _GNUC

